#!/bin/bash

# ----------
# Usage:
# ./generate_omp_report.sh <prog> <prog_parallel> <prog_arg1> <prog_arg2> ... <prog_argn>
#
# Runs <prog> with different OMP thread counts
# and times their execution. Output of <prog>
# is saved to log files with format <prog>-thread-count-<n>.log
# where <n> is the OMP thread count. Generates a bar chart
# for every program with execution time with respect to thread count
# The bar chart is generated by `generate_bar_chart.py` and is saved
# in format <prog>-thread-exec-times-bar.png
# ----------

root_dir=$(realpath `git rev-parse --git-dir`/..)
python3_venv_dir=${root_dir}/venv

# activate python venv
source $python3_venv_dir/bin/activate

oldIFS=$IFS
IFS=", "
num_threads_list="1,2,4,8"


program=$1
# Shift all the parameters down by one
shift
program_parallel=$1
# Shift all the parameters down by one
shift
args=$@

log_file="$program.log"
real_time=`{ time $program $args >$log_file; } 2>&1 | grep real | cut -f2`

real_times_parallel=
for num_threads in $num_threads_list;
do
    log_file="$program_parallel-thread-count-$num_threads.log"
    real_time_parallel=`{ time OMP_NUM_THREADS=$num_threads $program_parallel $args >$log_file; } 2>&1 | grep real | cut -f2`
    real_times_parallel="$real_times_parallel$real_time_parallel,"
done 

python3 ${root_dir}/scripts/generate_speedups_bar_chart.py $real_time $real_times_parallel $num_threads_list $program
#echo "python3 ${root_dir}/scripts/generate_bar_chart.py $real_time $real_times_parallel $num_threads_list $program_parallel"

IFS=$oldIFS

# deactivate python venv
deactivate
